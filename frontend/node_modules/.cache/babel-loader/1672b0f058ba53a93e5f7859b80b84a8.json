{"ast":null,"code":"import _slicedToArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx\";\n\nimport React, { useState } from 'react';\n\nvar Chronometer = function Chronometer() {\n  var _useState = useState('start'),\n      _useState2 = _slicedToArray(_useState, 2),\n      startStop = _useState2[0],\n      setStartStop = _useState2[1];\n\n  function changeTime() {\n    if (startStop === \"start\") {\n      setStartStop('stop');\n    } else {\n      setStartStop('start');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, startStop));\n};\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx"],"names":["React","useState","Chronometer","startStop","setStartStop","changeTime"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;;AAGA,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAAA,kBACAD,QAAQ,CAAC,OAAD,CADR;AAAA;AAAA,MAC3BE,SAD2B;AAAA,MAChBC,YADgB;;AAGlC,WAASC,UAAT,GAAqB;AACnB,QAAGF,SAAS,KAAK,OAAjB,EAAyB;AACzBC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACC,KAFD,MAEK;AACLA,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACC;AACF;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BF,SAA9B,CADF,CADF;AAKD,CAhBD;;AAkBA,eAAeD,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\nconst Chronometer: React.FC = () => {\n  const [startStop, setStartStop] = useState('start')\n\n  function changeTime(){\n    if(startStop === \"start\"){\n    setStartStop('stop')\n    }else{\n    setStartStop('start')\n    }\n  }\n\n  return(\n    <div>\n      <button onClick={changeTime}>{startStop}</button>\n    </div>\n  )\n};\n\nexport default Chronometer;"]},"metadata":{},"sourceType":"module"}