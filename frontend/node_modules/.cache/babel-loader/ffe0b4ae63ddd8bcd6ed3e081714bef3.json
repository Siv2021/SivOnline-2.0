{"ast":null,"code":"import _slicedToArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx\";\n\nimport React, { useState, useEffect } from 'react';\n\nvar Chronometer = function Chronometer() {\n  var _useState = useState('start'),\n      _useState2 = _slicedToArray(_useState, 2),\n      startStop = _useState2[0],\n      setStartStop = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      runStop = _useState6[0],\n      setRunStop = _useState6[1];\n\n  function changeTime() {\n    console.log(startStop);\n\n    if (startStop === \"start\") {\n      setStartStop('stop');\n      setRunStop(true);\n      console.log(startStop);\n      runTime();\n    } else {\n      setStartStop('start');\n      runTime();\n    }\n  }\n\n  function runTime() {\n    console.log(startStop);\n\n    do {} while (runStop);\n  }\n\n  useEffect(function () {\n    if (time !== 0) {\n      runTime();\n    }\n  }, [time]);\n\n  function reset() {\n    console.log('reset');\n    setTime(0);\n    setStartStop('start');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, startStop), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, time));\n};\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx"],"names":["React","useState","useEffect","Chronometer","startStop","setStartStop","time","setTime","runStop","setRunStop","changeTime","console","log","runTime","reset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAAA,kBACAF,QAAQ,CAAC,OAAD,CADR;AAAA;AAAA,MAC3BG,SAD2B;AAAA,MAChBC,YADgB;;AAAA,mBAEVJ,QAAQ,CAAC,CAAD,CAFE;AAAA;AAAA,MAE3BK,IAF2B;AAAA,MAErBC,OAFqB;;AAAA,mBAGJN,QAAQ,CAAC,KAAD,CAHJ;AAAA;AAAA,MAG3BO,OAH2B;AAAA,MAGlBC,UAHkB;;AAIlC,WAASC,UAAT,GAAqB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;;AACA,QAAGA,SAAS,KAAK,OAAjB,EAAyB;AACzBC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;AAEAS,MAAAA,OAAO;AAEN,KAPD,MAOK;AACLR,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAQ,MAAAA,OAAO;AACN;AACF;;AACD,WAASA,OAAT,GAAkB;AAChBF,IAAAA,OAAO,CAACC,GAAR,CAAYR,SAAZ;;AACA,OAAE,CAED,CAFD,QAEOI,OAFP;AAGD;;AACDN,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAGI,IAAI,KAAG,CAAV,EAAY;AACZO,MAAAA,OAAO;AACN;AACF,GAJQ,EAIP,CAACP,IAAD,CAJO,CAAT;;AAKA,WAASQ,KAAT,GAAgB;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAL,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAF,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEK,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BN,SAA9B,CADF,eAEE;AAAQ,IAAA,OAAO,EAAEU,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IADH,CAHF,CADF;AASD,CA5CD;;AA8CA,eAAeH,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\nconst Chronometer: React.FC = () => {\n  const [startStop, setStartStop] = useState('start')\n  const [time, setTime] = useState(0)\n  const [runStop, setRunStop] = useState(false)\n  function changeTime(){\n    console.log(startStop)\n    if(startStop === \"start\"){\n    setStartStop('stop')\n    setRunStop(true)\n    console.log(startStop)\n\n    runTime()\n\n    }else{\n    setStartStop('start')\n    runTime()\n    }\n  }\n  function runTime(){\n    console.log(startStop)\n    do{\n\n    }while(runStop)\n  }\n  useEffect(()=>{\n    if(time!==0){\n    runTime()\n    }\n  },[time])\n  function reset(){\n    console.log('reset')\n    setTime(0)\n    setStartStop('start')\n  }\n\n  return(\n    <div>\n      <button onClick={changeTime}>{startStop}</button>\n      <button onClick={reset}>reset</button>\n      <div>\n        {time}\n      </div>\n    </div>\n  )\n};\n\nexport default Chronometer;"]},"metadata":{},"sourceType":"module"}