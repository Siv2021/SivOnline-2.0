{"ast":null,"code":"import _classCallCheck from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.js\";\nimport React, { Component } from 'react';\n\nvar Chronometer = /*#__PURE__*/function (_Component) {\n  _inherits(Chronometer, _Component);\n\n  var _super = _createSuper(Chronometer);\n\n  function Chronometer(props) {\n    var _this;\n\n    _classCallCheck(this, Chronometer);\n\n    _this = _super.call(this, props);\n\n    _this.doIntervalChange = function () {\n      _this.myInterval = setInterval(function () {\n        _this.setState(function (prevState) {\n          return {\n            count: prevState.count - 1\n          };\n        });\n      }, 1000);\n    };\n\n    _this.state = {\n      count: 1,\n      status: 'start'\n    };\n    return _this;\n  }\n\n  _createClass(Chronometer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var count = this.state.count;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"Current Count: \", count), /*#__PURE__*/React.createElement(\"button\", {\n        name: this.state.status,\n        onClick: function onClick() {\n          if (_this2.name === 'start') {\n            _this2.doIntervalChange();\n          } else {\n            clearInterval(_this2.myInterval);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }\n      }, this.state.status), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            count: _this2.props.startCount\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      }, \"Reset\"));\n    }\n  }, {\n    key: \"startStop\",\n    value: function startStop(e) {} // setInterval\n    // clearInterval\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var startCount = this.props.startCount;\n      this.setState({\n        count: startCount\n      }); // this.doIntervalChange()\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.myInterval);\n    }\n  }]);\n\n  return Chronometer;\n}(Component);\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.js"],"names":["React","Component","Chronometer","props","doIntervalChange","myInterval","setInterval","setState","prevState","count","state","status","name","clearInterval","startCount","e"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACJ,uBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,8BAAMA,KAAN;;AADkB,UAmCpBC,gBAnCoB,GAmCD,YAAM;AACrB,YAAKC,UAAL,GAAkBC,WAAW,CAAC,YAAM;AACpC,cAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,iBAAK;AAC1BC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AADC,WAAL;AAAA,SAAvB;AAGD,OAJ8B,EAI5B,IAJ4B,CAA7B;AAKH,KAzCmB;;AAElB,UAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE,CADI;AAEXE,MAAAA,MAAM,EAAE;AAFG,KAAb;AAFkB;AAMnB;;;;6BAES;AAAA;;AAAA,UACDF,KADC,GACQ,KAAKC,KADb,CACDD,KADC;AAER,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBA,KAApB,CADF,eAEE;AAAQ,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC,MAAzB;AAAiC,QAAA,OAAO,EAAE,mBAAI;AAAC,cAAG,MAAI,CAACC,IAAL,KAAY,OAAf,EAAuB;AACxE,YAAA,MAAI,CAACR,gBAAL;AACD,WAFkD,MAE9C;AACHS,YAAAA,aAAa,CAAC,MAAI,CAACR,UAAN,CAAb;AACG;AAAC,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,KAAKK,KAAL,CAAWC,MAJhB,CAFF,eAOE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACJ,QAAL,CAAc;AAACE,YAAAA,KAAK,EAAE,MAAI,CAACN,KAAL,CAAWW;AAAnB,WAAd,CAAJ;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPF,CADF;AAWD;;;8BACSC,C,EAAE,CAEX,C,CACD;AACA;;;;wCACqB;AAAA,UACZD,UADY,GACE,KAAKX,KADP,CACZW,UADY;AAEnB,WAAKP,QAAL,CAAc;AACZE,QAAAA,KAAK,EAAEK;AADK,OAAd,EAFmB,CAKnB;AACD;;;2CAUuB;AACtBD,MAAAA,aAAa,CAAC,KAAKR,UAAN,CAAb;AACD;;;;EA9CuBJ,S;;AAiD1B,eAAeC,WAAf","sourcesContent":["\nimport React, { Component } from 'react'\n\nclass Chronometer extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      count: 1,\n      status: 'start'\n    }\n  }\n\n  render () {\n    const {count} = this.state\n    return (\n      <div>\n        <h1>Current Count: {count}</h1>\n        <button name={this.state.status} onClick={()=>{if(this.name==='start'){\n      this.doIntervalChange()\n    }else{\n      clearInterval(this.myInterval)\n        }}}>{this.state.status}</button>\n        <button onClick={()=>this.setState({count: this.props.startCount})}>Reset</button>\n      </div>\n    )\n  }\n  startStop(e){\n    \n  }\n  // setInterval\n  // clearInterval\n  componentDidMount () {\n    const {startCount} = this.props\n    this.setState({\n      count: startCount\n    })\n    // this.doIntervalChange()\n  }\n\n  doIntervalChange = () => {\n      this.myInterval = setInterval(() => {\n      this.setState(prevState => ({\n        count: prevState.count - 1\n      }))\n    }, 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.myInterval)\n  }\n}\n\nexport default Chronometer"]},"metadata":{},"sourceType":"module"}