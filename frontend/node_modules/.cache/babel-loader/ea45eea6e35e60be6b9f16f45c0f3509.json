{"ast":null,"code":"import _regeneratorRuntime from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/video/Jitsi.tsx\";\n\nimport React, { useState } from 'react';\n\nvar Jitsi = function Jitsi(_ref) {\n  var moderator = _ref.moderator,\n      roomName = _ref.roomName,\n      password = _ref.password,\n      user = _ref.user;\n  var jitsiContainerId = \"jitsi-container-id\";\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      jitsi = _useState2[0],\n      setJitsi = _useState2[1];\n\n  var loadJitsiScript = function loadJitsiScript() {\n    var resolveLoadJitsiScriptPromise = null;\n    var loadJitsiScriptPromise = new Promise(function (resolve) {\n      resolveLoadJitsiScriptPromise = resolve;\n    });\n    var script = document.createElement(\"script\");\n    script.src = \"https://meet.jit.si/external_api.js\";\n    script.async = true;\n    script.onload = resolveLoadJitsiScriptPromise;\n    document.body.appendChild(script);\n    return loadJitsiScriptPromise;\n  };\n\n  var initialiseJitsi = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _jitsi, _jitsi2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (window.JitsiMeetExternalAPI) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return loadJitsiScript();\n\n            case 3:\n              if (moderator === true) {\n                _jitsi = new window.JitsiMeetExternalAPI(\"meet.jit.si\", {\n                  roomName: roomName,\n                  parentNode: document.getElementById(jitsiContainerId),\n                  userInfo: {\n                    displayName: user\n                  },\n                  width: 200,\n                  height: 200\n                });\n                setJitsi(_jitsi);\n              } else {\n                _jitsi2 = new window.JitsiMeetExternalAPI(\"meet.jit.si\", {\n                  roomName: roomName,\n                  parentNode: document.getElementById(jitsiContainerId),\n                  userInfo: {\n                    displayName: user\n                  },\n                  width: 100,\n                  height: 100,\n                  configOverwrite: {\n                    startVideoOnly: false\n                  },\n                  interfaceConfigOverwrite: {\n                    TOOLBAR_BUTTONS: ['microphone', 'camera']\n                  }\n                });\n                setJitsi(_jitsi2);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function initialiseJitsi() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  React.useEffect(function () {\n    initialiseJitsi();\n    return function () {\n      var _jitsi$dispose;\n\n      return jitsi === null || jitsi === void 0 ? void 0 : (_jitsi$dispose = jitsi.dispose) === null || _jitsi$dispose === void 0 ? void 0 : _jitsi$dispose.call(jitsi);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: jitsiContainerId,\n    style: {\n      height: 720,\n      width: \"100%\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Jitsi;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/video/Jitsi.tsx"],"names":["React","useState","Jitsi","moderator","roomName","password","user","jitsiContainerId","jitsi","setJitsi","loadJitsiScript","resolveLoadJitsiScriptPromise","loadJitsiScriptPromise","Promise","resolve","script","document","createElement","src","async","onload","body","appendChild","initialiseJitsi","window","JitsiMeetExternalAPI","_jitsi","parentNode","getElementById","userInfo","displayName","width","height","configOverwrite","startVideoOnly","interfaceConfigOverwrite","TOOLBAR_BUTTONS","useEffect","dispose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\ninterface Props{\n  moderator?: boolean,\n  roomName: string,\n  password: string\n  user: string,\n}\ninterface JitsiTypes{\n  dispose?: Function,\n  executeCommand?: Function\n  getParticipantsInfo?: Function\n}\ninterface ParticipantJoined{\n  id: string, \n  // displayName: string\n}\nconst Jitsi: React.FC<Props> = ({moderator, roomName, password, user}): React.ReactElement => {\n\n    const jitsiContainerId = \"jitsi-container-id\";\n    const [jitsi, setJitsi] = useState<JitsiTypes>({});\n    const loadJitsiScript = () => {\n      let resolveLoadJitsiScriptPromise = null;\n  \n      const loadJitsiScriptPromise = new Promise((resolve) => {\n        resolveLoadJitsiScriptPromise = resolve;\n      });\n  \n      const script = document.createElement(\"script\");\n      script.src = \"https://meet.jit.si/external_api.js\";\n      script.async = true;\n      script.onload = resolveLoadJitsiScriptPromise\n      document.body.appendChild(script);\n  \n      return loadJitsiScriptPromise;\n    };\n    const initialiseJitsi = async () => {\n      if (!window.JitsiMeetExternalAPI) {\n        await loadJitsiScript();\n      }\n      if(moderator===true){\n        const _jitsi = new window.JitsiMeetExternalAPI(\"meet.jit.si\", {\n          roomName,\n          parentNode: document.getElementById(jitsiContainerId),\n          userInfo: {displayName: user},\n          width: 200,\n          height: 200,\n         \n        });\n      setJitsi(_jitsi)\n\n      }else{\n        const _jitsi = new window.JitsiMeetExternalAPI(\"meet.jit.si\", {\n          roomName,\n          parentNode: document.getElementById(jitsiContainerId),\n          userInfo: {displayName: user},\n          width: 100,\n          height: 100,\n          configOverwrite: { \n            startVideoOnly: false \n          },\n          interfaceConfigOverwrite: {\n         TOOLBAR_BUTTONS: [\n              'microphone', \n              'camera',\n          ],\n          },\n        });\n      setJitsi(_jitsi)\n\n      }\n     \n  \n    };\n  \n    React.useEffect(() => {\n      initialiseJitsi();\n  \n      return () => jitsi?.dispose?.();\n    }, []);\n\n\n    return <div id={jitsiContainerId} style={{ height: 720, width: \"100%\" }} />;\n  };\n  \n  export default Jitsi;"]},"metadata":{},"sourceType":"module"}