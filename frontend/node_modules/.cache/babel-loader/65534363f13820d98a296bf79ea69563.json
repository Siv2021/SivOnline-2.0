{"ast":null,"code":"import _toConsumableArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/chat/Chat.tsx\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport Ul from './Li';\nvar user = localStorage.getItem('representation');\nvar socket = io('http://localhost:3001');\n\nvar Chat = function Chat(_ref) {\n  var contat = _ref.contat,\n      haveMessages = _ref.haveMessages;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  socket.on('previousMessages', function (msgs) {\n    setMessages(msgs);\n  });\n  socket.on('receivedMessage', function (msg) {\n    if (msg.destiny === user && msg.author === contat) {\n      setMessages([].concat(_toConsumableArray(messages), [{\n        content: msg.content,\n        my: 'notMine'\n      }]));\n    }\n\n    if (msg.destiny === user && msg.author !== contat) {\n      haveMessages(msg.author);\n    }\n  });\n  useEffect(function () {\n    socket.emit('changeContat', {\n      user: user,\n      contat: contat\n    });\n  }, [contat]);\n  var sendMessage = useCallback(function (e) {\n    if (!message) {\n      return;\n    }\n\n    e.preventDefault();\n    setMessage('');\n    setMessages([].concat(_toConsumableArray(messages), [{\n      content: message,\n      my: 'mine'\n    }]));\n    socket.emit('sendMessage', {\n      author: user,\n      destiny: contat,\n      content: message\n    });\n  }, [message]);\n\n  if (!contat) {\n    contat = 'Brasil';\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: sendMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"titulo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, contat)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Ul, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, messages ? messages.map(function (message) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: message.my,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 44\n      }\n    }, message.content));\n  }) : /*#__PURE__*/React.createElement(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }\n  }, \"N\\xE3o rolou\")), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: function onChange(e) {\n      return setMessage(e.target.value);\n    },\n    value: message,\n    type: \"text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/chat/Chat.tsx"],"names":["React","useState","useEffect","useCallback","io","Ul","user","localStorage","getItem","socket","Chat","contat","haveMessages","message","setMessage","messages","setMessages","on","msgs","msg","destiny","author","content","my","emit","sendMessage","e","preventDefault","map","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,WAApC,QAAsD,OAAtD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,EAAP,MAAe,MAAf;AAeA,IAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAb;AACA,IAAMC,MAAM,GAAGL,EAAE,CAAC,uBAAD,CAAjB;;AACA,IAAMM,IAAqB,GAAG,SAAxBA,IAAwB,OAA4B;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;;AAAA,kBAE1BX,QAAQ,CAAC,EAAD,CAFkB;AAAA;AAAA,MAEjDY,OAFiD;AAAA,MAExCC,UAFwC;;AAAA,mBAGxBb,QAAQ,CAAa,EAAb,CAHgB;AAAA;AAAA,MAGjDc,QAHiD;AAAA,MAGvCC,WAHuC;;AAIxDP,EAAAA,MAAM,CAACQ,EAAP,CAAU,kBAAV,EAA8B,UAACC,IAAD,EAAqB;AACjDF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACD,GAFD;AAGAT,EAAAA,MAAM,CAACQ,EAAP,CAAU,iBAAV,EAA6B,UAACE,GAAD,EAAmB;AAC9C,QAAGA,GAAG,CAACC,OAAJ,KAAgBd,IAAhB,IAAwBa,GAAG,CAACE,MAAJ,KAAeV,MAA1C,EAAiD;AAC/CK,MAAAA,WAAW,8BAAKD,QAAL,IAAe;AAACO,QAAAA,OAAO,EAAEH,GAAG,CAACG,OAAd;AAAuBC,QAAAA,EAAE,EAAE;AAA3B,OAAf,GAAX;AACD;;AACD,QAAGJ,GAAG,CAACC,OAAJ,KAAgBd,IAAhB,IAAwBa,GAAG,CAACE,MAAJ,KAAeV,MAA1C,EAAiD;AAC/CC,MAAAA,YAAY,CAACO,GAAG,CAACE,MAAL,CAAZ;AACD;AACF,GAPD;AAQAnB,EAAAA,SAAS,CAAC,YAAI;AACZO,IAAAA,MAAM,CAACe,IAAP,CAAY,cAAZ,EAA4B;AAC1BlB,MAAAA,IAAI,EAAJA,IAD0B;AAE1BK,MAAAA,MAAM,EAANA;AAF0B,KAA5B;AAID,GALQ,EAKP,CAACA,MAAD,CALO,CAAT;AAOA,MAAMc,WAAW,GAAGtB,WAAW,CAAC,UAACuB,CAAD,EAAO;AACrC,QAAG,CAACb,OAAJ,EAAY;AACV;AACD;;AACDa,IAAAA,CAAC,CAACC,cAAF;AACGb,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAE,IAAAA,WAAW,8BAAKD,QAAL,IAAe;AAACO,MAAAA,OAAO,EAAGT,OAAX;AAAoBU,MAAAA,EAAE,EAAE;AAAxB,KAAf,GAAX;AACHd,IAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2B;AACzBH,MAAAA,MAAM,EAAEf,IADiB;AAEzBc,MAAAA,OAAO,EAAET,MAFgB;AAGzBW,MAAAA,OAAO,EAACT;AAHiB,KAA3B;AAKD,GAZ8B,EAY5B,CAACA,OAAD,CAZ4B,CAA/B;;AAcD,MAAG,CAACF,MAAJ,EAAW;AACTA,IAAAA,MAAM,GAAG,QAAT;AACD;;AAEA,sBACM;AAAM,IAAA,QAAQ,EAAEc,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,MAAL,CADA,CADF,eAKA;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEII,QAAQ,GAAGA,QAAQ,CAACa,GAAT,CAAa,UAAAf,OAAO;AAAA,wBAC7B;AAAI,MAAA,SAAS,EAAEA,OAAO,CAACU,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIV,OAAO,CAACS,OAAZ,CAA3B,CAD6B;AAAA,GAApB,CAAH,gBAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJZ,CADF,eAOA;AAAO,IAAA,QAAQ,EAAE,kBAAAI,CAAC;AAAA,aAAIZ,UAAU,CAACY,CAAC,CAACG,MAAF,CAASC,KAAV,CAAd;AAAA,KAAlB;AAAkD,IAAA,KAAK,EAAEjB,OAAzD;AAAkE,IAAA,IAAI,EAAC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPA,CALA,CADN;AAkBD,CA1DD;;AA4DA,eAAeH,IAAf","sourcesContent":["import React, {useState, useEffect, useCallback} from 'react';\r\nimport io from 'socket.io-client'\r\nimport Ul from './Li'\r\ninterface Props{\r\n  contat: string,\r\n  haveMessages: Function\r\n}\r\ninterface Messages{\r\n  content: string,\r\n  my: string\r\n}\r\n\r\ninterface MessageType{\r\n  author: string,\r\n  destiny: string,\r\n  content: string\r\n}\r\nconst user = localStorage.getItem('representation')\r\nconst socket = io('http://localhost:3001')\r\nconst Chat: React.FC<Props> = ({contat, haveMessages}) => {\r\n  \r\n  const [message, setMessage] = useState('')\r\n  const [messages, setMessages] = useState<Messages[]>([])\r\n  socket.on('previousMessages', (msgs: Messages[]) =>{\r\n    setMessages(msgs)\r\n  })\r\n  socket.on('receivedMessage', (msg:MessageType)=>{\r\n    if(msg.destiny === user && msg.author === contat){\r\n      setMessages([...messages, {content: msg.content, my: 'notMine'}])\r\n    }\r\n    if(msg.destiny === user && msg.author !== contat){\r\n      haveMessages(msg.author)\r\n    }\r\n  })\r\n  useEffect(()=>{\r\n    socket.emit('changeContat', {\r\n      user,\r\n      contat\r\n    })\r\n  },[contat])\r\n  \r\n  const sendMessage = useCallback((e) => {\r\n    if(!message){\r\n      return\r\n    }\r\n    e.preventDefault();\r\n       setMessage('')\r\n       setMessages([...messages, {content : message, my: 'mine' }])\r\n    socket.emit('sendMessage', {\r\n      author: user,\r\n      destiny: contat,\r\n      content:message\r\n    })\r\n  }, [message]);\r\n\r\n if(!contat){\r\n   contat = 'Brasil'\r\n }\r\n\r\n  return (\r\n        <form onSubmit={sendMessage}>\r\n          <div className=\"titulo\">\r\n          <h2>{contat}</h2>\r\n\r\n          </div>\r\n        <div id=\"messages\">\r\n          <Ul>\r\n             \r\n             {messages ? messages.map(message=>(\r\n                <li className={message.my}><p>{message.content}</p></li>\r\n                  )): <li>NÃ£o rolou</li>}\r\n          </Ul>\r\n        <input onChange={e => setMessage(e.target.value)} value={message} type=\"text\"/>\r\n\r\n          </div>\r\n        </form>\r\n  )\r\n}\r\n\r\nexport default Chat;"]},"metadata":{},"sourceType":"module"}