{"ast":null,"code":"'use strict';\n\nvar _objectSpread = require(\"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _slicedToArray = require(\"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar JitsiWrapperContext = React__default.createContext({\n  loaded: false,\n  url: \"\"\n});\n\nvar JitsiWrapper = function JitsiWrapper(_ref) {\n  var url = _ref.url,\n      children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  React.useEffect(function () {\n    var script = Object.assign(document.createElement(\"script\"), {\n      src: \"\".concat(url, \"/external_api.js\"),\n      async: true,\n      defer: true\n    });\n\n    script.onload = function () {\n      setLoaded(true);\n    };\n\n    document.head.appendChild(script);\n    return function () {\n      document.head.removeChild(script);\n    };\n  }, []);\n  return React__default.createElement(JitsiWrapperContext.Provider, {\n    value: {\n      loaded: loaded,\n      url: url\n    }\n  }, children);\n};\n\nJitsiWrapper.propTypes = {\n  url: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nvar withJitsiContext = function withJitsiContext() {\n  return React.useContext(JitsiWrapperContext);\n};\n\nvar WithJitsiContext = function WithJitsiContext(_ref2) {\n  var children = _ref2.children;\n  return children(withJitsiContext());\n};\n\nWithJitsiContext.propTypes = {\n  children: PropTypes.func.isRequired\n};\nvar jitsiOptionDefaults = {\n  width: \"100%\",\n  height: \"100%\",\n  noSSL: true\n};\n\nvar JitsiRoom = function JitsiRoom(props) {\n  var _React$useContext = React.useContext(JitsiWrapperContext),\n      loaded = _React$useContext.loaded;\n\n  var domain = props.domain;\n  var options = Object.assign({}, jitsiOptionDefaults, props.options);\n  var id = props.id || \"jitsi\";\n  var api;\n  React.useEffect(function () {\n    if (!loaded) {\n      return;\n    }\n\n    api = new JitsiMeetExternalAPI(domain, _objectSpread({\n      parentNode: document.querySelector(\"#\".concat(id))\n    }, options));\n    props.apiChanged && props.apiChanged(api);\n    return function () {\n      api === null || api === void 0 ? void 0 : api.dispose();\n    };\n  }, [loaded, JSON.stringify({\n    domain: domain,\n    options: options\n  })]);\n  return React__default.createElement(\"div\", {\n    id: id || \"jitsi\",\n    style: props.style || {}\n  });\n};\n\nJitsiRoom.propTypes = {\n  domain: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    configOverwrite: PropTypes.object,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string\n  }).isRequired,\n  id: PropTypes.string,\n  style: PropTypes.object,\n  apiChanged: PropTypes.func\n};\nexports.JitsiRoom = JitsiRoom;\nexports.JitsiWrapper = JitsiWrapper;\nexports.WithJitsiContext = WithJitsiContext;\nexports.jitsiOptionDefaults = jitsiOptionDefaults;\nexports.withJitsiContext = withJitsiContext;","map":{"version":3,"sources":["../src/index.tsx"],"names":["React","useState","useEffect","useContext"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, CSSProperties } from \"react\"\nimport PropTypes from \"prop-types\"\nimport type { EventEmitter } from \"events\"\n\nexport interface JitsiOptions {\n  roomName: string\n  width?: number | string | null\n  height?: number | string | null\n  configOverwrite?: object | null\n  interfaceConfigOverwrite?: object | null\n  noSSL?: boolean | null\n  jwt?: string | null\n  onLoad?: () => void\n  invitees?: unknown[]\n  devices?: {\n    audioInput?: string\n    audioOutput?: string\n    videoInput?: string\n  }\n  userInfo?: {\n    email?: string\n    displayName?: string\n  }\n}\nexport declare class JitsiMeetExternalAPI extends EventEmitter {\n  constructor(domain: string, options?: JitsiOptions & { parentNode: Element })\n  dispose: () => void\n  executeCommand: (command: string, ...args: string[]) => void\n  getNumberOfParticipants: () => number\n  avatarURL: () => string\n  displayName: () => string\n  email: () => string\n  iframe: () => HTMLIFrameElement\n  isAudioMuted: () => Promise<boolean>\n  isVideoMuted: () => Promise<boolean>\n  isAudioAvailable: () => Promise<boolean>\n  isVideoAvailable: () => Promise<boolean>\n  invite: (invitees: unknown[]) => Promise<void>\n}\n\nexport interface JitsiWrapperContext {\n  loaded: boolean\n  url: string\n}\nconst JitsiWrapperContext = React.createContext<JitsiWrapperContext>({\n  loaded: false,\n  url: \"\",\n})\nexport interface JitsiWrapperProps {\n  url: string\n  children: React.ReactNode\n}\nexport const JitsiWrapper: React.FC<JitsiWrapperProps> = ({ url, children }) => {\n  const [loaded, setLoaded] = useState<boolean>(false)\n\n  useEffect(() => {\n    const script = Object.assign(document.createElement(\"script\"), {\n      src: `${url}/external_api.js`,\n      async: true,\n      defer: true,\n    })\n    script.onload = (): void => {\n      setLoaded(true)\n    }\n    document.head.appendChild(script)\n    return (): void => {\n      document.head.removeChild(script)\n    }\n  }, [])\n\n  return <JitsiWrapperContext.Provider value={{ loaded, url }}>{children}</JitsiWrapperContext.Provider>\n}\nJitsiWrapper.propTypes = {\n  url: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport const withJitsiContext = (): JitsiWrapperContext => {\n  return useContext(JitsiWrapperContext)\n}\ninterface WithJitsiContextProps {\n  children: (jitsiContext: JitsiWrapperContext) => JSX.Element | null\n}\nexport const WithJitsiContext: React.FC<WithJitsiContextProps> = ({ children }) => {\n  return children(withJitsiContext())\n}\nWithJitsiContext.propTypes = {\n  children: PropTypes.func.isRequired,\n}\n\nexport interface JitsiRoomProps {\n  domain: string\n  options: JitsiOptions\n  id?: string\n  style?: CSSProperties\n  apiChanged?: (api: JitsiMeetExternalAPI) => void\n}\nexport const jitsiOptionDefaults = {\n  width: \"100%\",\n  height: \"100%\",\n  noSSL: true,\n}\nexport const JitsiRoom: React.FC<JitsiRoomProps> = (props) => {\n  const { loaded } = useContext(JitsiWrapperContext)\n\n  const { domain } = props\n  const options = Object.assign({}, jitsiOptionDefaults, props.options)\n\n  const id = props.id || \"jitsi\"\n  let api: JitsiMeetExternalAPI | undefined\n\n  useEffect(() => {\n    if (!loaded) {\n      return\n    }\n    api = new JitsiMeetExternalAPI(domain, {\n      parentNode: document.querySelector(`#${id}`) as Element,\n      ...options,\n    })\n    props.apiChanged && props.apiChanged(api)\n    return (): void => {\n      api?.dispose()\n    }\n  }, [loaded, JSON.stringify({ domain, options })])\n\n  return <div id={id || \"jitsi\"} style={props.style || {}} />\n}\n\nJitsiRoom.propTypes = {\n  domain: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    roomName: PropTypes.string.isRequired,\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    configOverwrite: PropTypes.object,\n    interfaceConfigOverwrite: PropTypes.object,\n    noSSL: PropTypes.bool,\n    jwt: PropTypes.string,\n  }).isRequired,\n  id: PropTypes.string,\n  style: PropTypes.object,\n  apiChanged: PropTypes.func,\n}\n"]},"metadata":{},"sourceType":"script"}