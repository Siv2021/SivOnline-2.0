{"ast":null,"code":"import _slicedToArray from \"/home/tiago/Documentos/SivOnline-github/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx\";\n\nimport React, { useState } from 'react';\n\nvar Chronometer = function Chronometer() {\n  var _useState = useState('start'),\n      _useState2 = _slicedToArray(_useState, 2),\n      startStop = _useState2[0],\n      setStartStop = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      time = _useState4[0],\n      setTime = _useState4[1];\n\n  function changeTime() {\n    if (startStop === \"start\") {\n      setStartStop('stop');\n      runTime();\n    } else {\n      setStartStop('start');\n      runTime();\n    }\n  }\n\n  function runTime() {\n    if (startStop === 'stop') {\n      setTimeout(function () {\n        setTime(time + 1);\n        runTime();\n      }, 1000);\n    }\n  }\n\n  function reset() {\n    setTime(0);\n    setStartStop('start');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: changeTime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, startStop), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: reset,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"reset\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, time));\n};\n\nexport default Chronometer;","map":{"version":3,"sources":["/home/tiago/Documentos/SivOnline-github/frontend/src/components/Chronometer/index.tsx"],"names":["React","useState","Chronometer","startStop","setStartStop","time","setTime","changeTime","runTime","setTimeout","reset"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAAyC,OAAzC;;AAGA,IAAMC,WAAqB,GAAG,SAAxBA,WAAwB,GAAM;AAAA,kBACAD,QAAQ,CAAC,OAAD,CADR;AAAA;AAAA,MAC3BE,SAD2B;AAAA,MAChBC,YADgB;;AAAA,mBAEVH,QAAQ,CAAC,CAAD,CAFE;AAAA;AAAA,MAE3BI,IAF2B;AAAA,MAErBC,OAFqB;;AAIlC,WAASC,UAAT,GAAqB;AACnB,QAAGJ,SAAS,KAAK,OAAjB,EAAyB;AACzBC,MAAAA,YAAY,CAAC,MAAD,CAAZ;AACAI,MAAAA,OAAO;AAEN,KAJD,MAIK;AACLJ,MAAAA,YAAY,CAAC,OAAD,CAAZ;AACAI,MAAAA,OAAO;AACN;AACF;;AACD,WAASA,OAAT,GAAkB;AAChB,QAAGL,SAAS,KAAK,MAAjB,EAAwB;AACtBM,MAAAA,UAAU,CAAC,YAAU;AACnBH,QAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACAG,QAAAA,OAAO;AACP,OAHQ,EAGN,IAHM,CAAV;AAID;AACF;;AACD,WAASE,KAAT,GAAgB;AACdJ,IAAAA,OAAO,CAAC,CAAD,CAAP;AACAF,IAAAA,YAAY,CAAC,OAAD,CAAZ;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,OAAO,EAAEG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BJ,SAA9B,CADF,eAEE;AAAQ,IAAA,OAAO,EAAEO,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,IADH,CAHF,CADF;AASD,CApCD;;AAsCA,eAAeH,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\n\nconst Chronometer: React.FC = () => {\n  const [startStop, setStartStop] = useState('start')\n  const [time, setTime] = useState(0)\n\n  function changeTime(){\n    if(startStop === \"start\"){\n    setStartStop('stop')\n    runTime()\n\n    }else{\n    setStartStop('start')\n    runTime()\n    }\n  }\n  function runTime(){\n    if(startStop === 'stop'){\n      setTimeout(function(){ \n        setTime(time+1)\n        runTime()\n       }, 1000);\n    }\n  }\n  function reset(){\n    setTime(0)\n    setStartStop('start')\n  }\n\n  return(\n    <div>\n      <button onClick={changeTime}>{startStop}</button>\n      <button onClick={reset}>reset</button>\n      <div>\n        {time}\n      </div>\n    </div>\n  )\n};\n\nexport default Chronometer;"]},"metadata":{},"sourceType":"module"}