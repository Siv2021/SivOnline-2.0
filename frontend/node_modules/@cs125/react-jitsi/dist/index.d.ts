/// <reference types="node" />
import React, { CSSProperties } from "react";
import type { EventEmitter } from "events";
export interface JitsiOptions {
    roomName: string;
    width?: number | string | null;
    height?: number | string | null;
    configOverwrite?: object | null;
    interfaceConfigOverwrite?: object | null;
    noSSL?: boolean | null;
    jwt?: string | null;
    onLoad?: () => void;
    invitees?: unknown[];
    devices?: {
        audioInput?: string;
        audioOutput?: string;
        videoInput?: string;
    };
    userInfo?: {
        email?: string;
        displayName?: string;
    };
}
export declare class JitsiMeetExternalAPI extends EventEmitter {
    constructor(domain: string, options?: JitsiOptions & {
        parentNode: Element;
    });
    dispose: () => void;
    executeCommand: (command: string, ...args: string[]) => void;
    getNumberOfParticipants: () => number;
    avatarURL: () => string;
    displayName: () => string;
    email: () => string;
    iframe: () => HTMLIFrameElement;
    isAudioMuted: () => Promise<boolean>;
    isVideoMuted: () => Promise<boolean>;
    isAudioAvailable: () => Promise<boolean>;
    isVideoAvailable: () => Promise<boolean>;
    invite: (invitees: unknown[]) => Promise<void>;
}
export interface JitsiWrapperContext {
    loaded: boolean;
    url: string;
}
export interface JitsiWrapperProps {
    url: string;
    children: React.ReactNode;
}
export declare const JitsiWrapper: React.FC<JitsiWrapperProps>;
export declare const withJitsiContext: () => JitsiWrapperContext;
interface WithJitsiContextProps {
    children: (jitsiContext: JitsiWrapperContext) => JSX.Element | null;
}
export declare const WithJitsiContext: React.FC<WithJitsiContextProps>;
export interface JitsiRoomProps {
    domain: string;
    options: JitsiOptions;
    id?: string;
    style?: CSSProperties;
    apiChanged?: (api: JitsiMeetExternalAPI) => void;
}
export declare const jitsiOptionDefaults: {
    width: string;
    height: string;
    noSSL: boolean;
};
export declare const JitsiRoom: React.FC<JitsiRoomProps>;
export {};
